% preamble taken from the vignette in package strucchange
%
\documentclass[12pt,a4paper]{article}
\usepackage{a4wide}
\usepackage{graphicx,color,alltt}
\usepackage[authoryear,round,longnamesfirst]{natbib}
\usepackage{hyperref}

\definecolor{Red}{rgb}{0.7,0,0}
\definecolor{Blue}{rgb}{0,0,0.8}
\definecolor{hellgrau}{rgb}{0.55,0.55,0.55}

\newcommand{\E}{\mbox{$\mathsf{E}$}}
\newcommand{\VAR}{\mbox{$\mathsf{VAR}$}}
\newcommand{\COV}{\mbox{$\mathsf{COV}$}}
\newcommand{\p}{\mbox{$\mathsf{P}$}}
\newcommand{\email}[1]{\href{mailto:#1}{\normalfont\texttt{#1}}}
\newenvironment{smallexample}{\begin{alltt}\small}{\end{alltt}}

\setlength{\parskip}{0.5ex plus0.1ex minus0.1ex}
\setlength{\parindent}{0em}

\bibpunct{(}{)}{;}{a}{}{,}

\newcommand{\ui}{\underline{i}}
\newcommand{\oi}{\overline{\imath}}

\RequirePackage{color}
\definecolor{Red}{rgb}{0.5,0,0}
\definecolor{Blue}{rgb}{0,0,0.5}
\definecolor{hellgrau}{rgb}{0.55,0.55,0.55}

\hypersetup{%
hyperindex,%
colorlinks,%
linktocpage,%
plainpages=false,%
linkcolor=Blue,%
citecolor=Blue,%
urlcolor=Red,%
pdfstartview=Fit,%
pdfview={XYZ null null null}%
}


\begin{document}

\SweaveOpts{engine=R,eps=FALSE}
%\VignetteIndexEntry{Inserting references in Rd and roxygen documentation}
%\VignetteDepends{Rdpack}
%\VignetteKeywords{bibtex, Rd format, Rd documentation, roxygen documentation}
%\VignettePackage{Rdpack}

\title{Inserting references in Rd and roxygen2 documentation}
\author{Georgi N. Boshnakov}
\date{}
\maketitle

%\begin{abstract}
%\end{abstract}
%
%\noindent
%{\bf Keywords:} structural change, CUSUM, MOSUM, recursive estimates, moving
%estimates, monitoring, \textsf{R}, \textsf{S}.\\

\begin{quote}
Package \verb+"Rdpack"+ provides a straightforward way to insert BibTeX references in the
documentation of an R package, using the RdMacros feature introduced in R~3.2.0. It
works for `roxygen2' documentation, as well.
\end{quote}

\bigskip

To use this mechanism in your package: %, do the following preparations:
\begin{enumerate}
\item
Add the following line to file `DESCRIPTION':
\begin{verbatim}
RdMacros: Rdpack
\end{verbatim}
(If the field 'RdMacros' is already present, add Rdpack to the list on that line.)

\item Add `Rdpack' to the list of imports%
  \footnote{Currently `R CMD check' doesn't complain if you don't import `Rdpack', as long as
    `Rdpack' is installed on the system (yours, CRAN, win-builder, etc.). However, services
    like `appveyor' or `travis-ci' do raise errors. Thanks to Clemens Schmid and Tim Riffe for allerting
    me about this.}.
If you do not have one, add the following line to file
`DESCRIPTION':
\begin{verbatim}
Imports: Rdpack
\end{verbatim}
You will need also to import something from the package, e.g. put this in file `NAMESPACE':
\begin{verbatim}
importFrom(Rdpack,reprompt)
\end{verbatim}

\item
  Create file \verb+REFERENCES.bib+ in  subdirectory \verb+inst/+ of your package
  and put the bibtex references in it.

\end{enumerate}

Then you can insert references in the documentation with \verb+\insertRef{key}{package}+,
where \verb+key+ is the bibtex key of the reference and \verb+package+ is your package.
This works in Rd files and in roxygen documentation chunks.

In fact, argument 'package' can be any installed R package\footnote{%
  There is of course the risk that the referenced entry may be removed from the other
  package. So this is probably only useful for one's own packages. Also, the other package
  would better be one of the packages mentioned in DESCRIPTION.}, not necessarily the current
one. This means that you don't need to copy references from other packages to your
\verb+"REFERENCES.bib"+ file.  This works for packages that have \verb+"REFERENCES.bib"+ in
their installation directory and for the default packages.

See also the help pages \verb+?Rdpack::insertRef+ and \verb+?Rdpack::Rdpack-package+.  For
example, the help page \verb+?Rdpack::insertRef+ contains the following lines in section
``References'' of the Rd file:
\begin{verbatim}
\insertRef{Rpack:bibtex}{Rdpack}
\insertRef{R}{bibtex}
\end{verbatim}
The first line above inserts the reference labeled \verb+Rpack:bibtex+ in Rdpack's
\verb+REFERENCES.bib+. The second line inserts the reference labeled \verb+R+ in file
\verb+REFERENCES.bib+ in package `bibtex'.

A roxygen2 documentation chunk might look like this:
\begin{verbatim}
#' \@references
#' \insertRef{Rpack:bibtex}{Rdpack}
#'
#' \insertRef{R}{bibtex}
\end{verbatim}


%\paragraph*{Note:}
% 2017-08-04 commented out,
% The references are processed when the package is built. So, there is \emph{no need} to
% depend/import/suggest package \verb+"Rdpack"+, it only needs to be installed on your machine.

\subsection*{Note about `devtools':}
\label{sec:devtools}

The described procedure works transparently in `roxygen2' chunks and with Hafley Wikham's
`devtools'.  Packages are built and installed properly with the `devtools' commands and the
references are processed as expected.

Currently (2017-08-04) you may encounter some puzzling warning messages in `developer' mode,
if you run help commands \verb+?xxx+ for functions from the package you are working on and
their help pages contain references. The warnings pop up because ``devtools'' reroutes the
help command to process the developer's Rd sources (rather than the documentation in the
installed directory) but doesn't tell \verb+parse_Rd+ were to look for additional macros.

These warnings are harmless - the help pages are built properly and no warnings appear
outside ``developer'' mode, e.g. in a separate R~session.


\subsection*{Inserting references interactively}
\label{sec:insert-refer-inter}

It is possible to use the underlying R function to insert references interactively.
For example,
<<>>=
library(Rdpack)
cat(insert_ref("R", package = "bibtex"), sep ="\n")
@

I would put the (commented out) command on top of the above reference as a reminder where it
came from:
\begin{verbatim}
% insert_ref("R", package = "bibtex"), sep ="\n")
\end{verbatim}

For a different approach, see the documentation of function \verb+{Rdpack::rebib()}+.

\end{document}
